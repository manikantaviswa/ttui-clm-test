.hierarchy-tree-ttui {
    
    /*
      * Replace svg style attributes and encode to base64 data url
      * @src: svg file
      * @keyValues: key-values to replace as map
      * 
      * Usage:
      * background: svg-to-base64-data-url-with-replace('node.svg', (stroke:$hierarchy-tree-node-stroke)) .5em 0em no-repeat;
      * 
      * base64EncodeReplace impl. in Gruntfile.js
    */
    @function svg-to-base64-data-url-with-replace($src, $keyValues...) {
        /* stringify keyValues and handle in js (for now...) */
        $output: unquote('url(data:image/svg+xml;base64,' + base64EncodeReplace($src, inspect($keyValues)) + ')');
        @return $output;
    }

    line-height: 1.33;

    hierarchy-tree-filter {
        .form-control {
            padding: 2px 20px 0px;
            border-width: 0;
            height: 45px;
            border: none;
            background: none;
            transition: none;
            cursor: text;
        }

        hr {
            margin-top: 0;
            margin-bottom: 0;
        }
    }

    .glyphicon.glyphicon-trash {
        font-size: 12px;
    }

    .glyphicon.glyphicon-ttui.glyphicon-circle,
    .glyphicon.glyphicon-ttui.glyphicon-chevron-circle-right,
    .glyphicon.glyphicon-ttui.glyphicon-chevron-circle-down,
    .glyphicon.glyphicon-ttui.glyphicon-chevron-circle-right-black,
    .glyphicon.glyphicon-ttui.glyphicon-chevron-circle-down-black {
        font-size: 20px;
        width: 20px;
        height: 20px;
        top: 2px;
    }

    .glyphicon.glyphicon-ttui.glyphicon-chevron-circle-right,
    .glyphicon.glyphicon-ttui.glyphicon-chevron-circle-right-black {
        transition: transform .3s ease;
        &.animate {
            transform: rotate(90deg);
        }
        &.animate-back {
            transform: rotate(90deg);
        }
    }

    > .tree-nodes {
        display: block;
        position: relative;
        margin: 0;
        padding: .5em 0 2em;
        list-style: none;
        color: $hierarchy-tree-node-text-color;

        ol {
            list-style: none;
            padding: 0 0 .5em;
            margin: -.5em 0 0;
        }

        li {
            padding: 1em 0 0 1.8em;
            background: url('#{$img-path}assets/node.svg') .5em 0em no-repeat;
            margin-bottom: -.5em;
        }

        li:last-child {
            background: url('#{$img-path}assets/last-node.svg') .5em 0em no-repeat;
            margin-bottom: -.5em;
        }

        li.background-none, li.background-none + li:last-child {
            background: none;
        }

        div.ng-hide-add, div.ng-hide-remove,
        li.ng-hide-add, li.ng-hide-remove {
            transition: all ease .1s;
        }

        div.ng-hide,
        li.ng-hide {
            height: 0;
            margin: 0;
            padding-top: 0;
            padding-bottom: 0;
            opacity: 0;
        }

    }

    input {
        border: none;
        outline: none;
        cursor: pointer;
        width: 30%;
        background: none;
        overflow: hidden;
        -o-text-overflow: ellipsis;
        -ms-text-overflow: ellipsis;
        text-overflow: ellipsis;
        white-space: nowrap;
        position: relative;

        &.size-10 {
            width: 10%;
        }
        &.size-20 {
            width: 20%;
        }
        &.size-30 {
            width: 30%;
        }
        &.size-40 {
            width: 40%;
        }
        &.size-50 {
            width: 50%;
        }
    }

    .tree-node-content {
        font-size: 14px;
        font-weight: 600;
        padding: .3em .5em .1em;

        &.no-children {
            padding-left: 1.2em;
            font-style: italic;
            color: $hierarchy-tree-node-no-children-text-color;
            font-weight: 500;
        }

        &.no-children.no-root-children{
            padding-left: .4em;
            font-weight: 600;
            font-style: normal;
            color: $hierarchy-tree-node-text-color;

            &.hover {
                font-weight: 700;
            }
        }

        &.hover {
            font-weight: 700;
        }
    }

    div.root-node {
        padding-left: .6em;
        margin-bottom: -.5em;
        font-size: 14px;
        font-weight: 600;
        padding-top: .1em;
        padding-bottom: .25em;

        > span.glyphicon.glyphicon-ttui {
            top: .2em;
        }

        .hover {
            font-weight: 700;
        }
        
        &.selected {
            margin-bottom: -.1em;
        }
    }

    .selected {
        @include box-shadow(-2px 1px 2px rgba(0,0,0,.2));
        border-top-left-radius: .4em;
        border-bottom-left-radius: .4em;
        z-index: 100;
        font-weight: 700!important;
        background: #fff;
        margin-bottom: 0.4em;
    }

    .selected-remove,
    .selected-add {
        transition: background ease .3s;
    }

    .selected-remove.selected-remove-active {
        background: transparent;
    }

    .selected-add.selected-add-active {
        background: #fff;
    }

    .buttons {
        padding-bottom: .8em;
        padding-left: 1.85em;
        padding-top: .3em;

        &.no-children {
            padding-left: 0;
        }
    }

    .hierarchy-tree-footer {
        padding-top: 1em;
    }

    .hierarchy-tree-header {
        margin-left: 5.6em;
        font-size: 11px;
        font-weight: 700;

        input {
            opacity: 1;
            cursor: default;
        }
    }
    
    .glyphicon-move {
        opacity: 0.5;
    }

    .dndPlaceholder {
        position: absolute;
        padding: 0px !important;
        border: 1px solid;
        width: 30%;
        z-index: -1;
    }
}

/* this should be somewhere else */
.no-gutter [class*="col-"] {
    padding-left: 0;
    padding-right: 0;
    padding-top: .4em;
}
