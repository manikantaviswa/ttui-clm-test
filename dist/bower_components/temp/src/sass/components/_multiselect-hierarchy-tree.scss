.multiselect-hierarchy-tree-ttui {
    
    margin: 5px;
    border: 1px solid lightgray;

    .glyphicon.glyphicon-ttui.glyphicon-circle,
    .glyphicon.glyphicon-ttui.glyphicon-chevron-circle-right,
    .glyphicon.glyphicon-ttui.glyphicon-chevron-circle-down,
    .glyphicon.glyphicon-ttui.glyphicon-chevron-circle-right-black,
    .glyphicon.glyphicon-ttui.glyphicon-chevron-circle-down-black {
        font-size: 20px;
        width: 20px;
        height: 20px;
        top: 2px;
    }

    .glyphicon.glyphicon-ttui.glyphicon-chevron-circle-right,
    .glyphicon.glyphicon-ttui.glyphicon-chevron-circle-right-black {
        transition: transform .3s ease;
        &.animate {
            transform: rotate(90deg);
        }
        &.animate-back {
            transform: rotate(90deg);
        }
    }

    > .tree-nodes {
        display: block;
        position: relative;
        margin: 0;
        padding: 0 0 1em;
        list-style: none;
        overflow-y: auto;
        height: 500px;
        overflow-x: hidden;

        ol {
            list-style: none;
            padding: 0 0 .5em;
            margin: -.5em 0 0;
        }
        
        li {
            padding: 1em 0 0 1.8em;
            background: url('../images/assets/node.svg') .5em 0em no-repeat transparent;
            margin-bottom: -.5em;
        }

        li:last-child {
            background: url('../images/assets/last-node.svg') .5em 0em no-repeat;
            margin-bottom: -.5em;
        }

        li.background-none, li.background-none + li:last-child {
            background: none transparent;
        }
        
        div.ng-enter {
            -webkit-transition: .3s linear all;
            -moz-transition: .3s linear all;
            -ms-transition: .3s linear all;
            -o-transition: .3s linear all;
            transition: .3s linear all;
        }
        div.ng-leave {
            -webkit-transition: .2s linear all;
            -moz-transition: .2s linear all;
            -ms-transition: .2s linear all;
            -o-transition: .2s linear all;
            transition: .2s linear all;
        }
        div.ng-enter {
            max-height: 0;
            opacity: 0;
        }
        div.ng-enter.ng-enter-active {
            max-height: 500px;
            opacity: 1;
        }
        div.ng-leave {
            max-height: 500px;
            margin-bottom: 0;
        }
        div.ng-leave.ng-leave-active {
            max-height: 0;
            margin-bottom: -.5em;
        }

    }

    input, input:focus {
        border: none;
        outline: none;
        background: none;
        overflow: hidden;
        -o-text-overflow: ellipsis;
        -ms-text-overflow: ellipsis;
        text-overflow: ellipsis;
        white-space: nowrap;
        position: relative;
        height: inherit;

        &.size-10 {
            width: 10%;
        }
        &.size-20 {
            width: 20%;
        }
        &.size-30 {
            width: 30%;
        }
        &.size-40 {
            width: 40%;
        }
        &.size-50 {
            width: 50%;
        }
    }

    .tree-node-content {
        font-size: 14px;
        font-weight: 600;
        padding: .3em .5em .1em;
        height: $multiselect-hierarchy-tree-node-height;
        cursor: pointer;

        &.no-children {
            padding-left: 1.2em;
            font-weight: 500;
        }

        &.no-children.no-root-children{
            padding-left: .4em;
            font-weight: 600;
            font-style: normal;

            &.hover {
                font-weight: 700;
            }
        }

        &.hover {
            font-weight: 700;
        }
    }

    #multiselect-tree-root {
        padding: 0px;
    }
    
    .search-container {
        height: 45px;
        border-bottom: 1px solid lightgray;
    }

    .counts {
        font-weight: normal;
    }
    
    .header span.node-title {
        position: relative;
        top: -2px;
    }
    
    .panel-footer {
        padding: 10px 8px;
        background-color: white;
        height: 45px;
    }

    /* Custom input checkbox styles */    
    input[type=checkbox].css-checkbox {
        position:absolute;
        z-index:-1000;
        left:-1000px;
        overflow: hidden;
        clip: rect(0 0 0 0);
        height:1px;
        width:1px;
        margin:-1px;
        padding:0;
        border:0;
    }

    input[type=checkbox].css-checkbox + label.css-label {
        padding-left:25px;
        height:17px; 
        display:inline-block;
        line-height:17px;
        background-repeat:no-repeat;
        background-position: 0 0;
        font-size:17px;
        vertical-align:middle;
        cursor:pointer;
    }

    input[type=checkbox].css-checkbox:checked + label.css-label {
        background-position: 0 -18px;
    }

    label.css-label {
        background-image: url('#{$img-path}assets/checkbox.svg');
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }
    
    .partially-selected label {
        background-position: 0 -35px !important;
    }
}
